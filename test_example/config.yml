# === Analysis configuration file ======================================================


# --- Configuration for `seqneut-pipeline` ---------------------------------------------

# for this test example the location is "../" but for real analyses it should almost
# certainly be "seqneut-pipeline'
seqneut-pipeline: ../

# for this test example the location is "../docs", but for real analyses it should
# almost certainly be "docs"
docs: ../docs

# change this to a good description of your project
description: |
  # Test example for [seqneut-pipeline](https://github.com/jbloomlab/seqneut-pipeline)
  This is a small toy-example created by subsetting a real experiment dataset.

  See [https://github.com/jbloomlab/seqneut-pipeline](https://github.com/jbloomlab/seqneut-pipeline)
  for the computer code and underlying numerical data.

  See [here](https://github.com/jbloomlab/seqneut-pipeline/graphs/contributors) for a
  list of all contributors to the pipeline.

viral_libraries:
  pdmH1N1_lib2023_loes: data/viral_libraries/pdmH1N1_lib2023_loes.csv

viral_strain_plot_order: data/viral_strain_plot_order.csv

neut_standard_sets:
  loes2023: data/neut_standard_sets/loes2023_neut_standards.csv

illumina_barcode_parser_params:
  upstream: CTCCCTACAATGTCGGATTTGTATTTAATAG
  downstream: ''
  minq: 20
  upstream_mismatch: 4
  bc_orientation: R2

default_process_plate_qc_thresholds: &default_process_plate_qc_thresholds
  avg_barcode_counts_per_well: 250  # 250 for this test, typically >= 500 for real experiments
  min_neut_standard_frac_per_well: 0.005
  no_serum_per_viral_barcode_filters:
    min_frac: 0.0005
    max_fold_change: 3
    max_wells: 2
  per_neut_standard_barcode_filters:
    min_frac: 0.005
    max_fold_change: 3
    max_wells: 2
  min_neut_standard_count_per_well: 500  # 500 for this test, typically >= 1000 for real experiments
  min_no_serum_count_per_viral_barcode_well: 30
  max_frac_infectivity_per_viral_barcode_well: 5
  min_dilutions_per_barcode_serum_replicate: 6

default_process_plate_curvefit_params: &default_process_plate_curvefit_params
  frac_infectivity_ceiling: 1
  fixtop: false
  fixbottom: 0

default_process_plate_curvefit_qc:  &default_process_plate_curvefit_qc
  max_frac_infectivity_at_least: 0.5
  min_R2: 0.8
  serum_replicates_ignore_curvefit_qc: []

plates:

  plate2:
    date: 2023-08-01
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate2_samples.csv
    manual_drops: {}
    qc_thresholds:
      <<: *default_process_plate_qc_thresholds
    curvefit_params:
      <<: *default_process_plate_curvefit_params
    curvefit_qc:
      <<: *default_process_plate_curvefit_qc

  plate11:
    date: 2023-09-26
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate11_samples.csv
    manual_drops: {}
    qc_thresholds:
      <<: *default_process_plate_qc_thresholds
    curvefit_params:
      <<: *default_process_plate_curvefit_params
    curvefit_qc:
      <<: *default_process_plate_curvefit_qc

# QC thresholds on per-serum virus titers. Each serum-virus titer must meet these QC
# thresholds or be specified in `serum_titers_qc_exclusions`. Otherwise titer is flagged
# as failing.
serum_titers_qc_thresholds:
  min_frac_infectivity: 0.7  # require one concentration with frac_infectivity >= this, if not >0.5 will be no IC50
  min_replicates: 2  # require at least this many replicates for a serum-virus pair
  max_fold_change_from_median: 3  # no replicate can have a titer more than this fold different from repicate median

# Specify exclusions from `serum_titers_qc_thresholds. For any serum that is failing the QC, put
# a key under `serum_titer_qc_thresholds` with the name of that serum. Under that serum, in
# turn put a key with the name of the virus strain. You then have two options. You can either
# put the subkey `ignore_qc: true` to totally ignore the `serum_tiers_qc_thresholds` for that
# serum-virus pair. Alternatively, you can put `replicates_to_drop` as key followed by a
# list of the replicate names to drop (if you put all of the replicates, that virus will be
# dropped altogether for the tiers). The replicate names here are those rendered in the plots
# by the `serum_titers` notebook, which are usually of the form "{plate}-{barcode}" possibly
# with an additional plate-replicate specifier.
serum_titers_qc_exclusions:

  M099d0:
    A/Bangladesh/8002/2021:
      ignore_qc: true  # many replicates, so ignore the extra variation around median
    A/Brisbane/02/2018:
      ignore_qc: true  # many replicates, so ignore the extra variation around median
    A/Norway/25089/2022:
      replicates_to_drop:
        - plate11-CGGATAAAAATGATAT  # NT50 is an outlier
    A/Wisconsin/588/2019:
      replicates_to_drop:
        - plate11-AGTCCTATCCTCAAAT  # NT50 is an outlier
    A/SouthAfrica/R16462/2021:
      replicates_to_drop:
        - plate2-CTAGCAGATTGTATAA  # NT50 is an outlier

  M099d30:
    A/Chester/5355/2022:
      replicates_to_drop:
        - plate11-CCTCAAAATAACAAGC  # NT50 is an outlier
    A/Michigan/45/2015:
      ignore_qc: true  # replicates are close enough to probably be OK
    A/Paris/31196/2021:
      ignore_qc: true  # replicates are close enough to probably be OK

  Y044d30:
    A/Bangladesh/8036/2021:
      ignore_qc: true  # replicates about evenly spaced so unclear if any are outliers
    A/Brisbane/48/2022:
      ignore_qc: true  # replicates about evenly spaced so unclear if any are outliers
    A/India-PUN-NIV328484/2021:
      ignore_qc: true  # replicates about evenly spaced so unclear if any are outliers
    A/Perth/1/2022:
      ignore_qc: true  # replicates about evenly spaced so unclear if any are outliers
    A/Washington/23/2020:
      ignore_qc: true  # replicates about evenly spaced so unclear if any are outliers
