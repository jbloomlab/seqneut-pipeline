# === Analysis configuration file ======================================================


# --- Configuration for `seqneut-pipeline` ---------------------------------------------

# Location of `seqneut-pipeline` submodule, typically "seqneut-pipeline"
seqneut-pipeline: seqneut-pipeline

# Specify each viral library and corresponding CSV matching barcode to strain name
# CSV must have columns "barcode" and "strain"
viral_libraries:
  pdmH1N1_lib2023_loes: data/viral_libraries/pdmH1N1_lib2023_loes.csv

# Specify the name of each set of neutralization standards and corresponding CSV
# with a column "barcode" listing the barcodes
neut_standard_sets:
  loes2023: data/neut_standard_sets/loes2023_neut_standards.csv

# keyword parameters for `dms_variants.illuminabarcodeparser.IlluminaBarcodeParser`
# https://jbloomlab.github.io/dms_variants/dms_variants.illuminabarcodeparser.html#dms_variants.illuminabarcodeparser.IlluminaBarcodeParser
illumina_barcode_parser_params:
  upstream: CTCCCTACAATGTCGGATTTGTATTTAATAG
  downstream: ''
  minq: 20
  upstream_mismatch: 4
  bc_orientation: R2

# Quality control thresholds for processing plates. Plates with samples that do not meet
# these thresholds are flagged and an error is raised.
process_counts_qc_thresholds:
  avg_barcode_counts: 500
  min_neut_standard_frac: 0.01
  max_neut_standard_frac_no_serum: 0.1
  barcode_frac_consistency: 3
  min_viral_barcode_frac: 0.001
  min_neut_standard_barcode_frac: 0.01
  min_neut_standard_count: 1000
  min_no_serum_viral_barcode_count: 10
  min_dilutions_per_serum_replicate: 4

# Specify the data for each neutralization plate in `plates`. Specify each plate as
#
#  plate_name:
#    date: <sequencing date in YYYY-MM-DD format>
#    viral_library: <name of a viral library>
#    neut_standard_set: <name of a neut standard set>
#    samples_csv: <samples in plate as CSV> 
#    process_counts_qc_thresholds:
#      avg_barcode_counts: <require this many avg counts per barcode>
#      min_neut_standard_frac: <require this frac counts from neut standard per sample>
#      max_neut_standard_frac_no_serum: <no more than this frac counts from neut-standard in no-serum samples>
#      barcode_consistency_frac: <max fold-change in barcode from medium in samples where should be consistent>
#      min_viral_barcode_frac: <require this frac viral barcode counts for each barcode in no-serum sample>
#      min_neut_standard_barcode_frac: <require this frac each neut-standard barcode in no-serum samples>
#      min_neut_standard_counts: <require this many total neut-standard counts per sample>
#      min_no_serum_viral_barcode_count: <require this many counts for each viral barcode in each no-serum sample>
#      min_dilutions_per_serum_replicate: <require this many different dilutions per serum replicate>
#    barcodes_to_drop: <list of barcodes to drop for this plate>
#
# The samples_csv must have columns "serum", "dilution_factor", "replicate", and "fastq".
# Other columns (eg,  "well", "notes") are allowed but are not used by the pipeline.
#
# Rows beginning with '#' are considered comments and are ignored.
#
# The "replicate" column indicates readings that go together as a replicate for that
# serum, and only has to be unique for that serum within that plate (so you can put any
# any value if the serum is only run once on that plate).
#
# Each plate must have at least one no-serum column that should have a serum entry of
# "none" and no concentration specified (nan). Note that each "none" entry in a plate
# must have a different "replicate" specified.

# default `process_counts_qc_thresholds` that can be used with merge key
# (https://ktomk.github.io/writing/yaml-anchor-alias-and-merge-key.html)
default_process_counts_qc_thresholds: &default_process_counts_qc_thresholds
  avg_barcode_counts: 500
  min_neut_standard_frac: 0.01
  max_neut_standard_frac_no_serum: 0.1
  barcode_frac_consistency: 3
  min_viral_barcode_frac: 0.001
  min_neut_standard_barcode_frac: 0.01
  min_neut_standard_count: 1000
  min_no_serum_viral_barcode_count: 10
  min_dilutions_per_serum_replicate: 4

plates:

  plate1:
    date: 2023-08-01
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate1_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop:
      - AAAACAGTATAGAAGA  # viral barcode w no counts in no-serum samples
      - AATCTCCTCACGCAGC  # viral barcode w no counts in no-serum samples
      - ATGCAATATTAAGGAA  # viral barcode w no counts in no-serum samples
      - GGTCCATCTCAGATCG  # neut standard barcode w inconsistently low counts in Y106d0_4860

  plate2:
    date: 2023-08-01
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate2_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate3:
    date: 2023-08-02
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate3_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate4:
    date: 2023-08-02
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate4_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate5:
    date: 2023-08-04
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate5_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate6:
    date: 2023-08-04
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate6_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate7:
    date: 2023-08-05
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate7_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate8:
    date: 2023-08-05
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate8_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate9:
    date: 2023-08-05
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate9_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate10:
    date: 2023-08-06
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate10_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate11:
    date: 2023-09-26
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate11_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []

  plate12:
    date: 2023-09-26
    viral_library: pdmH1N1_lib2023_loes
    neut_standard_set: loes2023
    samples_csv: data/plates/plate12_samples.csv
    process_counts_qc_thresholds:
      <<: *default_process_counts_qc_thresholds
    barcodes_to_drop: []
    sera_replicates_to_drop: []
